[{"/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/index.js":"1","/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/App.js":"2","/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/reportWebVitals.js":"3","/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/pages/Home.js":"4","/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/pages/Profile.js":"5","/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/pages/Login.js":"6","/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/pages/Signup.js":"7","/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/components/Footer/index.js":"8","/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/components/Header/index.js":"9","/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/utils/auth.js":"10","/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/utils/queries.js":"11","/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/utils/mutations.js":"12","/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/components/ProfileList/index.js":"13","/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/components/SkillForm/index.js":"14","/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/components/SkillsList/index.js":"15","/Users/Tom/Bootcamp/SpeakEasy/client/src/index.js":"16","/Users/Tom/Bootcamp/SpeakEasy/client/src/App.js":"17","/Users/Tom/Bootcamp/SpeakEasy/client/src/reportWebVitals.js":"18","/Users/Tom/Bootcamp/SpeakEasy/client/src/pages/Login.js":"19","/Users/Tom/Bootcamp/SpeakEasy/client/src/pages/Profile.js":"20","/Users/Tom/Bootcamp/SpeakEasy/client/src/pages/Signup.js":"21","/Users/Tom/Bootcamp/SpeakEasy/client/src/pages/Home.js":"22","/Users/Tom/Bootcamp/SpeakEasy/client/src/components/Footer/index.js":"23","/Users/Tom/Bootcamp/SpeakEasy/client/src/components/Header/index.js":"24","/Users/Tom/Bootcamp/SpeakEasy/client/src/utils/queries.js":"25","/Users/Tom/Bootcamp/SpeakEasy/client/src/utils/auth.js":"26","/Users/Tom/Bootcamp/SpeakEasy/client/src/utils/mutations.js":"27","/Users/Tom/Bootcamp/SpeakEasy/client/src/components/SkillsList/index.js":"28","/Users/Tom/Bootcamp/SpeakEasy/client/src/components/SkillForm/index.js":"29","/Users/Tom/Bootcamp/SpeakEasy/client/src/components/Translator.js":"30","/Users/Tom/Bootcamp/SpeakEasy/client/src/components/ProfileList/ProfileList.js":"31","/Users/Tom/Bootcamp/SpeakEasy/client/src/utils/language-code.js":"32","/Users/Tom/Bootcamp/SpeakEasy/client/src/utils/token.js":"33","/Users/Tom/Bootcamp/SpeakEasy/client/src/utils/speech.js":"34"},{"size":500,"mtime":1642664389997,"results":"35","hashOfConfig":"36"},{"size":1929,"mtime":1642664389995,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1642664389998,"results":"38","hashOfConfig":"36"},{"size":704,"mtime":1642664389997,"results":"39","hashOfConfig":"36"},{"size":930,"mtime":1642664389997,"results":"40","hashOfConfig":"36"},{"size":2500,"mtime":1642664389997,"results":"41","hashOfConfig":"36"},{"size":2725,"mtime":1642664389997,"results":"42","hashOfConfig":"36"},{"size":632,"mtime":1642664389995,"results":"43","hashOfConfig":"36"},{"size":1237,"mtime":1642664389996,"results":"44","hashOfConfig":"36"},{"size":1036,"mtime":1642664389998,"results":"45","hashOfConfig":"36"},{"size":325,"mtime":1642664389998,"results":"46","hashOfConfig":"36"},{"size":685,"mtime":1642664389998,"results":"47","hashOfConfig":"36"},{"size":1268,"mtime":1642664389996,"results":"48","hashOfConfig":"36"},{"size":1723,"mtime":1642664389996,"results":"49","hashOfConfig":"36"},{"size":604,"mtime":1642664389996,"results":"50","hashOfConfig":"36"},{"size":500,"mtime":1643115035093,"results":"51","hashOfConfig":"52"},{"size":1987,"mtime":1644052063762,"results":"53","hashOfConfig":"52"},{"size":362,"mtime":1643115035093,"results":"54","hashOfConfig":"52"},{"size":2643,"mtime":1646914302794,"results":"55","hashOfConfig":"52"},{"size":930,"mtime":1643699145767,"results":"56","hashOfConfig":"52"},{"size":2826,"mtime":1644237240103,"results":"57","hashOfConfig":"52"},{"size":1236,"mtime":1644235770967,"results":"58","hashOfConfig":"52"},{"size":1386,"mtime":1644239925493,"results":"59","hashOfConfig":"52"},{"size":1577,"mtime":1644242321925,"results":"60","hashOfConfig":"52"},{"size":380,"mtime":1643932523931,"results":"61","hashOfConfig":"52"},{"size":1137,"mtime":1646914015318,"results":"62","hashOfConfig":"52"},{"size":1422,"mtime":1644053289730,"results":"63","hashOfConfig":"52"},{"size":604,"mtime":1643115035097,"results":"64","hashOfConfig":"52"},{"size":1723,"mtime":1643891047513,"results":"65","hashOfConfig":"52"},{"size":12463,"mtime":1649145895886,"results":"66","hashOfConfig":"52"},{"size":1303,"mtime":1643699901183,"results":"67","hashOfConfig":"52"},{"size":7471,"mtime":1643944875046,"results":"68","hashOfConfig":"52"},{"size":950,"mtime":1643963963239,"results":"69","hashOfConfig":"52"},{"size":4563,"mtime":1649145299829,"results":"70","hashOfConfig":"52"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xv1kee",{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},"1p1u54g",{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"103"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"103"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"103"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"103"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},"/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/index.js",[],"/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/App.js",[],"/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/reportWebVitals.js",[],"/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/pages/Home.js",[],"/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/pages/Profile.js",[],"/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/pages/Login.js",[],"/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/pages/Signup.js",[],"/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/components/Footer/index.js",[],"/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/components/Header/index.js",[],"/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/utils/auth.js",[],"/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/utils/queries.js",[],"/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/utils/mutations.js",[],"/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/components/ProfileList/index.js",[],"/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/components/SkillForm/index.js",["146"],"/Users/Tom/Bootcamp/Gitlab/usyd-syd-fsf-pt-08-2021-u-c/Unit-21-MERN/01-Activities/23-Ins_Decode-JWT/client/src/components/SkillsList/index.js",[],"/Users/Tom/Bootcamp/SpeakEasy/client/src/index.js",[],["147","148"],"/Users/Tom/Bootcamp/SpeakEasy/client/src/App.js",["149"],"import React from \"react\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport Profile from \"./pages/Profile\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n// import Button from \"@material-ui/core/Button\";\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container\">\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route>\n            {/* <Route exact path=\"/profiles/:profileId\">\n              <Profile />\n            </Route> */}\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","/Users/Tom/Bootcamp/SpeakEasy/client/src/reportWebVitals.js",[],"/Users/Tom/Bootcamp/SpeakEasy/client/src/pages/Login.js",[],"/Users/Tom/Bootcamp/SpeakEasy/client/src/pages/Profile.js",[],"/Users/Tom/Bootcamp/SpeakEasy/client/src/pages/Signup.js",[],"/Users/Tom/Bootcamp/SpeakEasy/client/src/pages/Home.js",["150","151","152"],"import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\n\nimport Translator from \"../components/Translator\";\nimport ProfileList from \"../components/ProfileList/ProfileList\";\n\nimport { QUERY_PROFILES } from \"../utils/queries\";\nimport auth from \"../utils/auth\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nconst Home = () => {\n  const history = useHistory();\n  // is user is not authenticated, redirect to /login\n  if (!auth.loggedIn()) {\n    history.push(\"/login\");\n  }\n  const { loading, data } = useQuery(QUERY_PROFILES);\n  const profiles = data?.profiles || [];\n\n  return (\n    <main>\n      <div className=\"flex-row justify-center\">\n        <div className=\"col-12 col-md-10 my-3\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            // <div>\n            //   <profile />\n            // </div>\n            // <div>\n            //   <ProfileList profiles={profiles} title={\"hello\"}/>\n            // </div>\n            <div>\n              <Translator />\n            </div>\n          )}\n        </div>\n      </div>\n    </main>\n  );\n};\n/* //   profiles={profiles}\n            //   title=\"Here's the current roster of friends...\"\n            // </div> */\n\nexport default Home;\n","/Users/Tom/Bootcamp/SpeakEasy/client/src/components/Footer/index.js",["153","154"],"import React from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport LinkedInIcon from \"@mui/icons-material/LinkedIn\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport Auth from \"../../utils/auth\";\n\nconst Footer = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const isLoggedIn = Auth.loggedIn();\n\n  // if a user is logged in - don't show the Icons\n\n  return (\n    <>\n      {isLoggedIn ? (\n        <footer className=\"w-100 mt-auto text-dark p-4\">\n          <div className=\"container text-center mb-5\">\n            <h4>SpeakEasy&copy; {new Date().getFullYear()}</h4>\n          </div>\n        </footer>\n      ) : (\n        <footer className=\"w-100 mt-auto text-dark p-4\">\n          <div className=\"container text-center mb-5\">\n            <h4>SpeakEasy&copy; {new Date().getFullYear()}</h4>\n            <a\n              href=\"https://www.linkedin.com/in/tomsouthwick/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <LinkedInIcon alt=\"linkedIn\" />\n            </a>\n\n            <a\n              href=\"https://github.com/TomSouthwick\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <GitHubIcon alt=\"GitHub repository\" />\n            </a>\n          </div>\n        </footer>\n      )}\n    </>\n  );\n};\n\nexport default Footer;\n","/Users/Tom/Bootcamp/SpeakEasy/client/src/components/Header/index.js",[],"/Users/Tom/Bootcamp/SpeakEasy/client/src/utils/queries.js",[],"/Users/Tom/Bootcamp/SpeakEasy/client/src/utils/auth.js",[],"/Users/Tom/Bootcamp/SpeakEasy/client/src/utils/mutations.js",[],"/Users/Tom/Bootcamp/SpeakEasy/client/src/components/SkillsList/index.js",[],"/Users/Tom/Bootcamp/SpeakEasy/client/src/components/SkillForm/index.js",["155"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_SKILL } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst SkillForm = ({ profileId }) => {\n  const [skill, setSkill] = useState('');\n\n  const [addSkill, { error }] = useMutation(ADD_SKILL);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const data = await addSkill({\n        variables: { profileId, skill },\n      });\n\n      setSkill('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div>\n      <h4>Endorse some more skills below.</h4>\n\n      {Auth.loggedIn() ? (\n        <form\n          className=\"flex-row justify-center justify-space-between-md align-center\"\n          onSubmit={handleFormSubmit}\n        >\n          <div className=\"col-12 col-lg-9\">\n            <input\n              placeholder=\"Endorse some skills...\"\n              value={skill}\n              className=\"form-input w-100\"\n              onChange={(event) => setSkill(event.target.value)}\n            />\n          </div>\n\n          <div className=\"col-12 col-lg-3\">\n            <button className=\"btn btn-info btn-block py-3\" type=\"submit\">\n              Endorse Skill\n            </button>\n          </div>\n          {error && (\n            <div className=\"col-12 my-3 bg-danger text-white p-3\">\n              {error.message}\n            </div>\n          )}\n        </form>\n      ) : (\n        <p>\n          You need to be logged in to endorse skills. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default SkillForm;\n","/Users/Tom/Bootcamp/SpeakEasy/client/src/components/Translator.js",["156","157","158","159","160","161","162","163","164","165","166","167","168","169","170"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport TextField from \"@mui/material/TextField\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport MicIcon from \"@mui/icons-material/Mic\";\nimport VolumeUpIcon from \"@mui/icons-material/VolumeUp\";\nimport IconButton, { IconButtonClasses } from \"@mui/material/IconButton\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Divider from \"@mui/material/Divider\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\n\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport { styled, createTheme, ThemeProvider } from \"@mui/system\";\nimport * as sdk from \"microsoft-cognitiveservices-speech-sdk\";\nimport { useMutation } from \"@apollo/client\";\nimport { useQuery } from \"@apollo/client\";\nimport { languages } from \"../utils/language-code\";\nimport { activateTextToSpeech } from \"../utils/speech\";\n\nimport { ADD_INPUT_PHRASE, REMOVE_ALL_TRANSLATIONS } from \"../utils/mutations\";\nimport { ADD_TRANSLATED_PHRASE } from \"../utils/mutations\";\nimport { QUERY_SINGLE_PROFILE } from \"../utils/queries\";\n\nimport Auth from \"../utils/auth\";\nimport { getTokenOrRefresh } from \"../utils/token\";\n\nconst Translator = () => {\n  const [addInputPhrase, { error: inputPhraseError }] =\n    useMutation(ADD_INPUT_PHRASE);\n  const [addTranslatedPhrase, { error: translatedPhraseError }] = useMutation(\n    ADD_TRANSLATED_PHRASE\n  );\n  const [removeAllTranslations, { error: removeAllTranslationsError }] =\n    useMutation(REMOVE_ALL_TRANSLATIONS);\n\n  const profileQuery = useQuery(QUERY_SINGLE_PROFILE, {\n    variables: { profileId: Auth.getProfile().data._id },\n  });\n\n  const history = useHistory();\n  // is user is not authenticated, redirect to /login\n\n  const activateTranslate = async (inputText) => {\n    if (!Auth.loggedIn()) {\n      history.push(\"/login\");\n      return;\n    }\n    // console.log(languageFrom, languageTo, Auth.getToken());\n\n    // const auth = getToken() {\n    //   return localStorage.getItem(\"id_token\");\n    // }\n    const profileId = Auth.getProfile().data._id;\n    const data = await addInputPhrase({\n      variables: { profileId, inputPhrase: inputText },\n    });\n    // addInputPhrase(inputText)\n\n    return axios\n      .post(\"/api/translate/\", {\n        fromLang: languageFrom,\n        toLang: languageTo,\n        userText: inputText,\n        token: Auth.getToken(),\n      })\n      .then(async function (response) {\n        console.log(response);\n\n        const translated = response.data.text + \"@@\" + languageTo;\n        const translatedData = await addTranslatedPhrase({\n          variables: { profileId, translatedPhrase: translated },\n        });\n        // store the translated text to db\n        setTranslationOutput(response.data.text);\n\n        return {\n          translated: response.data.text,\n          languageTo,\n        };\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const sttFromMic = async (test) => {\n    console.log(test);\n    const tokenObj = await getTokenOrRefresh();\n    const speechConfig = sdk.SpeechConfig.fromAuthorizationToken(\n      tokenObj.authToken,\n      tokenObj.region\n    );\n    speechConfig.speechRecognitionLanguage = languageFrom;\n\n    const audioConfig = sdk.AudioConfig.fromDefaultMicrophoneInput();\n    const recognizer = new sdk.SpeechRecognizer(speechConfig, audioConfig);\n\n    recognizer.recognizeOnceAsync((result) => {\n      // setTimeout(() => {\n      //   activateTranslate()\n      // }, 0)\n\n      let displayText;\n      if (result.reason === sdk.ResultReason.RecognizedSpeech) {\n        displayText = `RECOGNIZED: Text=${result.text}`;\n        setUserText(result.text);\n        setTimeout(() => {\n          activateTranslate(result.text);\n        }, 0);\n      } else {\n        displayText =\n          \"ERROR: Speech was cancelled or could not be recognized. Ensure your microphone is working properly.\";\n      }\n\n      console.log(result.text);\n      console.log(displayText);\n      // state = displayText\n      return result;\n    });\n  };\n\n  const clearAll = async () => {\n    // let\n    const clearPhrases = await removeAllTranslations({\n      variables: { profileId: Auth.getProfile().data._id },\n    });\n    profileQuery.refetch();\n  };\n  const [clearTranslations, setClearTranslations] = useState(\"\");\n  const [languageFrom, setLanguageFrom] = useState(\"en-US\");\n  const [languageTo, setLanguageTo] = useState(\"fr-FR\");\n  const [userText, setUserText] = useState(\"Hello World. Translate me\");\n  const [translationOutput, setTranslationOutput] = useState(\n    \"Salut tout le monde. Traduisez-moi\"\n  );\n\n  const customTheme = createTheme({\n    palette: {\n      primary: {\n        main: \"#1976d2\",\n        contrastText: \"white\",\n      },\n    },\n  });\n\n  async function speakUpMate(userText) {\n    const { translated, languageTo } = await activateTranslate(userText);\n    await activateTextToSpeech(languageTo, translated);\n  }\n\n  const MyThemeComponent = styled(\"div\")(({ theme }) => ({\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.main,\n    padding: theme.spacing(1),\n    borderRadius: theme.shape.borderRadius,\n  }));\n\n  const style = {\n    width: \"100%\",\n    maxWidth: 360,\n    bgcolor: \"background.paper\",\n  };\n\n  return (\n    <div>\n      <Box sx={{ flexGrow: 1 }}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={6}>\n            <TextField\n              id=\"filled-multiline-static\"\n              // label=\"Text to be translated\"\n              style={{ width: \"100%\" }}\n              multiline\n              rows={4}\n              defaultValue={userText}\n              variant=\"filled\"\n              value={userText}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment>\n                    <IconButton sx={{ marginTop: \"-65px\" }}>\n                      <MicIcon\n                        fontSize=\"large\"\n                        onClick={sttFromMic}\n                        color=\"primary\"\n                      />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n              onChange={(event) => {\n                setUserText(event.target.value);\n                //call the api response = apirCAll()\n                // setTranslationOutput(response)\n              }}\n            ></TextField>\n\n            <Autocomplete\n              disablePortal\n              disableClearable\n              id=\"combo-box-demo\"\n              placeholder=\"English\"\n              defaultValue={{ label: \"English\" }}\n              options={languages}\n              sx={{ width: \"100%\", marginTop: \"20px\" }}\n              renderInput={(params) => (\n                <TextField {...params} label=\"Language\" />\n              )}\n              onChange={(event, newValue) => {\n                setLanguageFrom(newValue.languagecode);\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Box\n              sx={{\n                display: \"block\",\n                padding: \"10px\",\n                paddingTop: \"27px\",\n                paddingRight: \"40px\",\n                minHeight: \"125px\",\n                maxHeight: \"125px\",\n                bgcolor: (theme) =>\n                  theme.palette.mode === \"dark\" ? \"#101010\" : \"#fff\",\n                color: (theme) =>\n                  theme.palette.mode === \"dark\" ? \"grey.300\" : \"grey.800\",\n                border: \"1px solid\",\n                borderColor: (theme) =>\n                  theme.palette.mode === \"dark\" ? \"grey.800\" : \"grey.300\",\n                borderRadius: 2,\n                fontSize: \"1rem\",\n                fontWeight: \"560\",\n              }}\n              style={{ overflow: \"hidden\", overflow: \"overlay\" }}\n            >\n              <Box\n                id=\"phraseDiv\"\n                component=\"span\"\n                minHeight=\"30px\"\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                }}\n                // defaultValue=\"Translated text...\"\n                // fontColor=\"black\"\n              >\n                <div>{translationOutput}</div>\n                <div\n                  style={{\n                    marginTop: \"-15px\",\n                  }}\n                >\n                  {/* Wrap inside an audio-tag */}\n                  <audio id=\"speakup-mate\"></audio>\n                  <IconButton>\n                    <VolumeUpIcon\n                      id=\"startSpeakTextAsyncButton\"\n                      color=\"primary\"\n                      fontSize=\"large\"\n                      onClick={\n                        () => {\n                          document.getElementById(\"speakup-mate\").play();\n                        }\n                        // activateTextToSpeech(languageTo, translationOutput)\n                      }\n                    />\n                  </IconButton>\n                </div>\n              </Box>\n            </Box>\n            <Autocomplete\n              disablePortal\n              disableClearable\n              placeholder=\"French\"\n              id=\"combo-box-demo\"\n              options={languages}\n              sx={{ width: \"100%\", marginTop: \"20px\" }}\n              defaultValue={{ label: \"French\" }}\n              renderInput={(params) => (\n                <TextField {...params} label=\"Language\" />\n              )}\n              onChange={(event, newValue) => {\n                setLanguageTo(newValue.languagecode);\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Box>\n\n      <div style={{ textAlign: \"center\" }}>\n        <Button\n          style={{ marginTop: \"10px\", marginBottom: \"20px\" }}\n          onClick={() => speakUpMate(translationOutput)}\n          variant=\"contained\"\n        >\n          Translate\n        </Button>\n      </div>\n\n      <Grid container spacing={2}>\n        <Grid\n          item\n          xs={12}\n          md={6}\n          style={{ display: \"flex\", flexDirection: \"column-reverse\" }}\n        >\n          {!profileQuery.loading &&\n            profileQuery?.data?.profile?.inputPhrases.map((phrase) => {\n              return (\n                <List sx={style} component=\"nav\" aria-label=\"mailbox folders\">\n                  <ListItem\n                    button\n                    onClick={() => {\n                      navigator.clipboard.writeText(phrase);\n                    }}\n                  >\n                    <ListItemText primary={phrase} />\n                    <ContentCopyIcon></ContentCopyIcon>\n                  </ListItem>\n                  <Divider />\n                </List>\n              );\n            })}\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          md={6}\n          style={{ display: \"flex\", flexDirection: \"column-reverse\" }}\n        >\n          {!profileQuery.loading &&\n            profileQuery?.data?.profile?.translatedPhrases.map((phrase) => {\n              const splitted = phrase.split(\"@@\");\n              const translation = splitted[0];\n              const lang = splitted[1];\n              return (\n                <List sx={style} component=\"nav\" aria-label=\"mailbox folders\">\n                  <ListItem\n                    button\n                    onClick={async () => {\n                      const audio = document.getElementById(\"speakup-mate\");\n                      audio.src = \"\";\n                      await activateTextToSpeech(lang, translation);\n                      console.log(\"black btnn\");\n                      audio.play();\n                    }}\n                  >\n                    <ListItemText primary={translation} />\n                    <VolumeUpIcon></VolumeUpIcon>\n                  </ListItem>\n                  <Divider />\n                </List>\n              );\n            })}\n        </Grid>\n      </Grid>\n\n      {profileQuery?.data?.profile?.translatedPhrases.length > 0 && (\n        <div style={{ textAlign: \"center\", marginTop: \"10px\" }}>\n          <Button onClick={() => clearAll(userText)} variant=\"contained\">\n            Clear History\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Translator;\n","/Users/Tom/Bootcamp/SpeakEasy/client/src/components/ProfileList/ProfileList.js",[],"/Users/Tom/Bootcamp/SpeakEasy/client/src/utils/language-code.js",[],"/Users/Tom/Bootcamp/SpeakEasy/client/src/utils/token.js",[],"/Users/Tom/Bootcamp/SpeakEasy/client/src/utils/speech.js",["171","172","173","174","175","176","177","178"],"import { getTokenOrRefresh } from \"./token\";\nimport * as sdk from \"microsoft-cognitiveservices-speech-sdk\";\nimport { Howl, Howler } from \"howler\";\n\nasync function tts2(text) {\n  // var sdk = require(\"microsoft-cognitiveservices-speech-sdk\");\n  // var readline = require(\"readline\");\n\n  var key = \"YourSubscriptionKey\";\n  var region = \"YourServiceRegion\";\n  var audioFile = \"YourAudioFile.wav\";\n\n  const tokenObj = await getTokenOrRefresh();\n  const speechConfig = sdk.SpeechConfig.fromAuthorizationToken(\n    tokenObj.authToken,\n    tokenObj.region\n  );\n\n  // const audioConfig = sdk.AudioConfig.fromAudioFileOutput(audioUrl);\n\n  // The language of the voice that speaks.\n  speechConfig.speechSynthesisVoiceName = \"en-US-JennyNeural\";\n\n  // Create the speech synthesizer.\n  var synthesizer = new sdk.SpeechSynthesizer(speechConfig);\n\n  synthesizer.speakTextAsync(\n    text,\n    function (result) {\n      if (result.reason === sdk.ResultReason.SynthesizingAudioCompleted) {\n        console.log(\"synthesis finished.\");\n      } else {\n        console.error(\n          \"Speech synthesis canceled, \" +\n            result.errorDetails +\n            \"\\nDid you update the subscription info?\"\n        );\n      }\n      synthesizer.close();\n      synthesizer = null;\n    },\n    function (err) {\n      console.trace(\"err - \" + err);\n      synthesizer.close();\n      synthesizer = null;\n    }\n  );\n}\n\nconst activateTextToSpeech = async (languageTo, sourceTranslation) => {\n  const tokenObj = await getTokenOrRefresh();\n  const speechConfig = sdk.SpeechConfig.fromAuthorizationToken(\n    tokenObj.authToken,\n    tokenObj.region\n  );\n  // speechConfig.speechSynthesisLanguage = \"en-US\"; // For example, \"de-DE\"\n  speechConfig.speechSynthesisLanguage = languageTo; // For example, \"de-DE\"\n\n  //tts2(sourceTranslation);\n  const dest = new sdk.SpeakerAudioDestination(\"aaa\");\n  dest.onAudioEnd = function () {\n    console.log(\"audioEnd\");\n  };\n  const audioConfig = sdk.AudioConfig.fromSpeakerOutput(dest);\n  //const audioConfig = sdk.AudioConfig.fromSpeakerOutput();\n\n  console.log({ audioConfig });\n\n  const synthesizer = new sdk.SpeechSynthesizer(speechConfig, audioConfig);\n\n  let done = false;\n  synthesizer.synthesisCompleted = function (s, e) {\n    if (!done) {\n      console.log(s);\n      console.log(e);\n    }\n  };\n\n  synthesizer.speakTextAsync(\n    sourceTranslation,\n    (result) => {\n      console.log(\"this is raw\", result);\n      // const player = new sdk.BaseAudioPlayer();\n      // player.playAudioSample(result.audioData);\n\n      const data = result.privAudioData;\n\n      const audioElement = document.getElementById(\"speakup-mate\");\n\n      const blob = new Blob([result.audioData], { type: \"audio/mp3\" });\n\n      const url = window.URL.createObjectURL(blob);\n\n      const sound = new Howl({\n        src: [url],\n      });\n      console.log(\"howler\");\n      // sound.play();\n\n      audioElement.src = url;\n      // audioElement.controls = true;\n\n      console.log(\"audio is \", audioElement);\n\n      // we want to run play() only on ios\n\n      function iOS() {\n        return (\n          [\n            \"iPad Simulator\",\n            \"iPhone Simulator\",\n            \"iPod Simulator\",\n            \"iPad\",\n            \"iPhone\",\n            \"iPod\",\n          ].includes(navigator.platform) ||\n          // iPad on iOS 13 detection\n          (navigator.userAgent.includes(\"Mac\") && \"ontouchend\" in document)\n        );\n      }\n      console.log(\"playinggggg\");\n      // audioElement.play();\n      // if (iOS()) {\n      //}\n\n      // document.body.append(audioElement);\n\n      // MSE will block you when you tried to automate media playing\n      // click translate\n      // get the array buffer\n\n      // create an audio element\n      // replace with eht blue speaker icon\n\n      //       audioElement.play();\n\n      // const audio = new AudioContext();\n\n      // audio.decodeAudioData(data, (decoded) => {\n      //   console.log(decoded);\n\n      //   const source = audio.createBufferSource();\n      //   source.buffer = decoded;\n\n      //   source.connect(audio.destination);\n      //   source.start();\n      // });\n\n      if (result.reason === sdk.ResultReason.SynthesizingAudioCompleted) {\n        done = true;\n        console.log(\"synthesis finished.\");\n      } else {\n        console.error(\n          \"Speech synthesis canceled, \" +\n            result.errorDetails +\n            \"\\nDid you update the subscription info?\"\n        );\n      }\n    },\n    (error) => {\n      console.log(error);\n\n      synthesizer.close();\n    }\n  );\n};\n\nexport { activateTextToSpeech };\n",{"ruleId":"179","severity":1,"message":"180","line":18,"column":13,"nodeType":"181","messageId":"182","endLine":18,"endColumn":17},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"179","severity":1,"message":"187","line":12,"column":8,"nodeType":"181","messageId":"182","endLine":12,"endColumn":15},{"ruleId":"179","severity":1,"message":"188","line":5,"column":8,"nodeType":"181","messageId":"182","endLine":5,"endColumn":19},{"ruleId":"179","severity":1,"message":"189","line":9,"column":22,"nodeType":"181","messageId":"182","endLine":9,"endColumn":33},{"ruleId":"179","severity":1,"message":"190","line":18,"column":9,"nodeType":"181","messageId":"182","endLine":18,"endColumn":17},{"ruleId":"179","severity":1,"message":"191","line":8,"column":9,"nodeType":"181","messageId":"182","endLine":8,"endColumn":17},{"ruleId":"179","severity":1,"message":"192","line":9,"column":9,"nodeType":"181","messageId":"182","endLine":9,"endColumn":16},{"ruleId":"179","severity":1,"message":"180","line":18,"column":13,"nodeType":"181","messageId":"182","endLine":18,"endColumn":17},{"ruleId":"179","severity":1,"message":"193","line":1,"column":27,"nodeType":"181","messageId":"182","endLine":1,"endColumn":36},{"ruleId":"179","severity":1,"message":"194","line":11,"column":22,"nodeType":"181","messageId":"182","endLine":11,"endColumn":39},{"ruleId":"179","severity":1,"message":"189","line":19,"column":22,"nodeType":"181","messageId":"182","endLine":19,"endColumn":33},{"ruleId":"179","severity":1,"message":"195","line":21,"column":31,"nodeType":"181","messageId":"182","endLine":21,"endColumn":44},{"ruleId":"179","severity":1,"message":"196","line":36,"column":35,"nodeType":"181","messageId":"182","endLine":36,"endColumn":51},{"ruleId":"179","severity":1,"message":"197","line":38,"column":40,"nodeType":"181","messageId":"182","endLine":38,"endColumn":61},{"ruleId":"179","severity":1,"message":"198","line":41,"column":42,"nodeType":"181","messageId":"182","endLine":41,"endColumn":68},{"ruleId":"179","severity":1,"message":"180","line":62,"column":11,"nodeType":"181","messageId":"182","endLine":62,"endColumn":15},{"ruleId":"179","severity":1,"message":"199","line":78,"column":15,"nodeType":"181","messageId":"182","endLine":78,"endColumn":29},{"ruleId":"179","severity":1,"message":"200","line":132,"column":11,"nodeType":"181","messageId":"182","endLine":132,"endColumn":23},{"ruleId":"179","severity":1,"message":"201","line":137,"column":10,"nodeType":"181","messageId":"182","endLine":137,"endColumn":27},{"ruleId":"179","severity":1,"message":"202","line":137,"column":29,"nodeType":"181","messageId":"182","endLine":137,"endColumn":49},{"ruleId":"179","severity":1,"message":"203","line":145,"column":9,"nodeType":"181","messageId":"182","endLine":145,"endColumn":20},{"ruleId":"179","severity":1,"message":"204","line":159,"column":9,"nodeType":"181","messageId":"182","endLine":159,"endColumn":25},{"ruleId":"205","severity":1,"message":"206","line":242,"column":44,"nodeType":"207","messageId":"208","endLine":242,"endColumn":52},{"ruleId":"179","severity":1,"message":"209","line":3,"column":16,"nodeType":"181","messageId":"182","endLine":3,"endColumn":22},{"ruleId":"179","severity":1,"message":"210","line":5,"column":16,"nodeType":"181","messageId":"182","endLine":5,"endColumn":20},{"ruleId":"179","severity":1,"message":"211","line":9,"column":7,"nodeType":"181","messageId":"182","endLine":9,"endColumn":10},{"ruleId":"179","severity":1,"message":"212","line":10,"column":7,"nodeType":"181","messageId":"182","endLine":10,"endColumn":13},{"ruleId":"179","severity":1,"message":"213","line":11,"column":7,"nodeType":"181","messageId":"182","endLine":11,"endColumn":16},{"ruleId":"179","severity":1,"message":"180","line":86,"column":13,"nodeType":"181","messageId":"182","endLine":86,"endColumn":17},{"ruleId":"179","severity":1,"message":"214","line":94,"column":13,"nodeType":"181","messageId":"182","endLine":94,"endColumn":18},{"ruleId":"179","severity":1,"message":"215","line":107,"column":16,"nodeType":"181","messageId":"182","endLine":107,"endColumn":19},"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["216"],"no-negated-in-lhs",["217"],"'Profile' is defined but never used.","'ProfileList' is defined but never used.","'useLocation' is defined but never used.","'profiles' is assigned a value but never used.","'location' is assigned a value but never used.","'history' is assigned a value but never used.","'useEffect' is defined but never used.","'IconButtonClasses' is defined but never used.","'ThemeProvider' is defined but never used.","'inputPhraseError' is assigned a value but never used.","'translatedPhraseError' is assigned a value but never used.","'removeAllTranslationsError' is assigned a value but never used.","'translatedData' is assigned a value but never used.","'clearPhrases' is assigned a value but never used.","'clearTranslations' is assigned a value but never used.","'setClearTranslations' is assigned a value but never used.","'customTheme' is assigned a value but never used.","'MyThemeComponent' is assigned a value but never used.","no-dupe-keys","Duplicate key 'overflow'.","ObjectExpression","unexpected","'Howler' is defined but never used.","'tts2' is defined but never used.","'key' is assigned a value but never used.","'region' is assigned a value but never used.","'audioFile' is assigned a value but never used.","'sound' is assigned a value but never used.","'iOS' is defined but never used.","no-global-assign","no-unsafe-negation"]